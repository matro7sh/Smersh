# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Listener\UserCreateListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, connection: default }
            - { name: doctrine.event_listener, event: postPersist, connection: default }

    App\Listener\PasswordEncoderListener:
        tags:
            - { name: doctrine.event_listener, event: preUpdate, connection: default }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    acme_api.event.jwt_created_listener:
        class: App\Subscriber\JWTGenerationSubscriber
        arguments:
            $roleHierarchy: '@security.role_hierarchy'
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\Listener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 120 }

    App\Serializer\TranslationContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\TranslationContextBuilder.inner' ]
        autoconfigure: false

    App\Serializer\TranslationNormalizer:
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    locastic_api_platform_translation.translation.translator:
        class: Locastic\ApiPlatformTranslationBundle\Translation\Translator
        arguments:
            - '@translator'
            - '@request_stack'
            - '%kernel.default_locale%'

    locastic_api_platform_translation.listener.assign_locale:
        class: Locastic\ApiPlatformTranslationBundle\EventListener\AssignLocaleListener
        arguments:
            - '@locastic_api_platform_translation.translation.translator'
            - '%kernel.default_locale%'
        tags:
            - { name: doctrine.event_listener, event: postLoad }
            - { name: doctrine.event_listener, event: prePersist }

    App\Extension\AssignedMissionExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
